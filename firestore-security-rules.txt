// 🔒 High School Students Jobs - Secure Firestore Rules
// 이 규칙을 Firebase Console에서 적용하세요!

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // 🔐 사용자 인증 확인 함수
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // 👑 관리자 권한 확인 함수
    function isAdmin() {
      return isAuthenticated() && 
             request.auth.token.email in [
               'admin@example.com',
               'manager@jobsprout.ca', 
               'admin@jobsprout.ca',
               'nbhighschooljobs@gmail.com'
             ];
    }
    
    // 👤 본인 데이터 확인 함수
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // 📖 사이트 콘텐츠 (관리자만 쓰기, 모든 사용자 읽기)
    match /siteContent/{document=**} {
      allow read: if true;  // 홈페이지 콘텐츠는 모든 사용자가 볼 수 있음
      allow write: if isAdmin();  // 관리자만 수정 가능
    }
    
    // 🎨 디자인 설정 (관리자만 접근)
    match /designSettings/{document=**} {
      allow read: if true;  // 디자인은 모든 사용자가 볼 수 있음
      allow write: if isAdmin();  // 관리자만 수정 가능
    }
    
    // 👥 사용자 프로필 (누구나 읽기 가능, 본인만 수정)
    match /users/{userId} {
      allow read: if true;  // 학생 프로필은 누구나 볼 수 있음 (구인자들이 확인용)
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // 💼 채용 공고 (누구나 읽기 가능, 등록은 로그인 필요)
    match /jobPostings/{jobId} {
      allow read: if true;  // 누구나 구인공고 목록 볼 수 있음
      allow create: if isAuthenticated();  // 로그인한 사용자는 채용공고 등록 가능
      allow update, delete: if isAdmin();  // 수정/삭제는 관리자만
    }
    
    // 📝 지원서 (본인 것만 접근, 관리자는 모든 것 접근)
    match /applications/{applicationId} {
      allow read, write: if isAuthenticated() && 
                         (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // 📚 추천서 (본인 것만 접근, 관리자는 모든 것 접근)
    match /references/{referenceId} {
      allow read, write: if isAuthenticated() && 
                         (resource.data.studentId == request.auth.uid || 
                          resource.data.teacherId == request.auth.uid || 
                          isAdmin());
    }
    
    // 🎉 이벤트 (누구나 읽기 가능, 관리자만 쓰기)
    match /events/{eventId} {
      allow read: if true;  // 누구나 이벤트 목록 볼 수 있음
      allow write: if isAdmin();  // 이벤트 등록은 관리자만
    }
    
    // 💬 커뮤니티 게시글 (누구나 읽기, 작성은 로그인 필요)
    match /community/{postId} {
      allow read: if true;  // 누구나 커뮤니티 게시글 읽기 가능
      allow create: if isAuthenticated();  // 작성은 로그인 필요
      allow update, delete: if isAuthenticated() && 
                            (resource.data.authorId == request.auth.uid || isAdmin());
    }
    
    // 🎓 구직 신청 (인증된 사용자만 접근)
    match /jobSeekers/{applicationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();  // 누구나 구직 신청 가능
      allow update, delete: if isAuthenticated() && 
                           (resource.data.email == request.auth.token.email || isAdmin());
    }
    
    // 📝 구인공고 지원 (인증된 사용자만 접근)
    match /jobApplications/{applicationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();  // 누구나 지원 가능
      allow update, delete: if isAuthenticated() && 
                           (resource.data.applicantId == request.auth.uid || isAdmin());
    }
    
    // 🤝 봉사활동 (누구나 읽기 가능, 등록은 로그인 필요)
    match /volunteerPostings/{postId} {
      allow read: if true;  // 누구나 봉사활동 목록 볼 수 있음
      allow create: if isAuthenticated();  // 등록은 로그인 필요
      allow update, delete: if isAdmin();
    }
    
    // 🤝 봉사활동 지원
    match /volunteerApplications/{applicationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();  // 누구나 봉사활동 지원 가능
      allow update, delete: if isAuthenticated() && 
                           (resource.data.applicantId == request.auth.uid || isAdmin());
    }
    
    // 📁 파일 업로드 (인증된 사용자만)
    match /uploadedFiles/{fileId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();  // 누구나 파일 업로드 가능
      allow update, delete: if isAdmin();  // 관리나만 수정/삭제
    }
    
    // 📞 문의사항 (누구나 제출 가능)
    match /contacts/{contactId} {
      allow read: if isAdmin();  // 관리자만 읽기 (개인정보 보호)
      allow create: if true;     // 누구나 문의 가능 (로그인 불필요)
      allow update, delete: if isAdmin();
    }
    
    // 📋 이벤트 등록
    match /eventRegistrations/{registrationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();  // 누구나 이벤트 등록 가능
      allow update, delete: if isAuthenticated() && 
                           (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // 📊 활동 로그 (관리자와 시스템만)
    match /logs/{logId} {
      allow read, write: if isAdmin();
    }
    
    // 🎨 디자인 에셋 (업로드는 관리자만, 읽기는 모든 사용자)
    match /designAssets/{assetId} {
      allow read: if true;  // 디자인 에셋은 모든 사용자가 볼 수 있음
      allow write: if isAdmin();  // 업로드는 관리자만
    }
    
    // 🔒 기본적으로 모든 다른 경로는 읽기만 허용 (새로운 컬렉션 대비)
    match /{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}

// 📝 Storage 보안 규칙도 함께 적용하세요:
// service firebase.storage {
//   match /b/{bucket}/o {
//     match /{allPaths=**} {
//       allow read: if true;  // 이미지는 누구나 볼 수 있음
//       allow write: if request.auth != null;  // 업로드는 인증된 사용자만
//     }
//   }
// } 